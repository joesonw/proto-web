package plugin

import (
	"regexp"

	"github.com/joesonw/proto-tools/pkg/genutil"
	"google.golang.org/protobuf/compiler/protogen"
)

var (
	pkgHttp       = protogen.GoImportPath("net/http")
	pkgHttpRouter = protogen.GoImportPath("github.com/julienschmidt/httprouter")
	pkgProtoWeb   = protogen.GoImportPath("github.com/joesonw/proto-web/pkg/protoweb")
	pkgGrpc       = protogen.GoImportPath("google.golang.org/grpc")
	pkgContext    = protogen.GoImportPath("context")
	pkgStrconv    = protogen.GoImportPath("strconv")
	pkgIoutil     = protogen.GoImportPath("io/ioutil")
	pkgProtojson  = protogen.GoImportPath("google.golang.org/protobuf/encoding/protojson")
	pkgFmt        = protogen.GoImportPath("fmt")
)

var (
	pathParamRegex = regexp.MustCompile(`{[a-zA-Z][a-zA-Z0-9_]*}`)
)

type Plugin struct {
}

func (p *Plugin) GenFile(file *protogen.File, g *genutil.G) error {

	g.P("// Code generated by protoc-gen-pw-http-server. DO NOT EDIT. ")
	g.P("package ", file.GoPackageName)
	g.P("")

	for _, svc := range file.Services {
		if err := p.GenService(svc, g); err != nil {
			return err
		}
	}

	return nil
}
